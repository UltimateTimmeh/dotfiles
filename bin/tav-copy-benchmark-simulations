#!/bin/bash
# Copy benchmark FEA and/or CFD results to the user's bumper/results directory.

# Functions


usage() {
    cat <<EOF

Usage: $(basename $0) [options] BENCHID

Copy FEA and/or CFD simulation results of benchmark case BENCHID to the user's
bumper/results directory. Optionally rename the copied files and/or create
accompanying .done files in the user's bumper/requests directory.

Options:
  -n : Dry run. Only show what would happen, but don't actually do anything.
  -d : Create a .done file in the user's bumper/request directory for each
       simulation that was copied. When done as user 'myfeops' on 'feops1',
       the presence of the .done files notifies TAVIguide-web that the
       respective simulations have finished.
  -f : Copy the chosen benchmark case's FEA results.
  -c : Copy the chosen benchmark case's CFD results.
  -l : List the available benchmark cases in BENCHROOT and exit.
  -r NEWID : When given, all copied files are renamed to have BENCHID replaced
             with NEWID.
  -b BENCHROOT : Specify the root directory of the benchmark cases.
        The default benchmark case root directory is:
          - '/srv/webdav/TAV/Verification/SystemVerification/testdata/BCH'
        Other options for production and test cases (respectively) are:
          - '/srv/webdav/TAV/Verification/SystemVerification/testdata/TAV'
          - '/srv/webdav/TAV/Verification/SystemVerification/testdata/TST'

Examples:

1. Copying the CFD results of benchmark case BCH00LT25 to the user's
   bumper/results directory, renaming the copied files to case ID
   TST000123 and creating .done files in the user's bumper/requests
   directory:

     $ $(basename $0) -ndc -r TST000123 BCH00LT25
  
   Actually, the above command only simulates these actions. Remove the -n
   option to really do it.

2. Listing the available benchmark cases in directory /home/user/benchmark:

     $ $(basename $0) -lb /home/user/benchmark

   This actually works by simply listing all files in the given directory, so
   this does not necessarily only list valid benchmark cases.

3. Typical copyback during TAVIguide testing will be done with the following
   two commands, for FEA and CFD respectively:

     $ $(basename $0) -dfr TESTID BENCHID
     $ $(basename $0) -dcr TESTID BENCHID

EOF
}


get_fea_ids() {
    local SIMID
    local SIMIDS=
    for SIMDIR in $BENCHSIMDIR/*; do
	SIMID=$(basename $SIMDIR)
	SIMIDS="$SIMIDS $SIMID"
    done
    echo "$SIMIDS"
}


copy_fea_results() {
    local SIMID=$1
    local SIMDIR=$BENCHSIMDIR/$SIMID
    rsync $SIMDIR/ --include $SIMID'.*' --exclude '*'  $RESDIR/$SIMID -avhP $DRY
}


copy_cfd_results() {
    local FEAID=$1
    local CFDID=${FEAID}_cfd
    local CFDRESDIR=${BENCHSIMDIR}/$FEAID/cfd/results
    rsync $CFDRESDIR/ --include "PBBOX.pgf" --include "*.log" --exclude '*'  $RESDIR/$CFDID -avhP $DRY
    for alignment in aligned misaligned; do
	rsync $CFDRESDIR/ --include "${FEAID}_${alignment}*" --include "${FEAID}_${alignment}_logs/*" --exclude '*'  $RESDIR/$CFDID/${FEAID}_cfd_${alignment} -avhP $DRY
    done
}


rename_by_replace() {
    # All files in directory $1 that have $2 in them are renamed by replacing $2 with $3.
    find $1 -depth -name "$2[.-]*" -exec rename $DRY "s|$2([^/]*)$|$3\$1|" {} \;
}


# Process the arguments.
BENCHROOT=/srv/webdav/TAV/Verification/SystemVerification/testdata/BCH
DRY=
DONE=0
LIST=0
CFD=0
FEA=0
NEWID=
ECHO=

OPTIND=1 # Reset in case getopts has been used previously in the shell.

while getopts "cdflnr:b:" opt; do
    case "$opt" in
        n)  DRY=-n
	    ECHO='echo DRY RUN: '
            ;;
	d)  DONE=1
	    ;;
	c)  CFD=1
	    ;;
	f)  FEA=1
	    ;;
	l)  LIST=1
	    ;;
 	r)  NEWID=$OPTARG
	    ;;
	b)  BENCHROOT=$OPTARG
	    ;;
    esac
done

shift $((OPTIND-1))

# Set a few variables.
BENCHIDS=$(ls $BENCHROOT)
[ "$LIST" = "1" ] && {
    # If the -l option is used, only list available benchmark cases.
    echo "The following benchmark cases are available in $BENCHROOT:"
    for BENCHID in $BENCHIDS; do
	echo "    $BENCHID"
    done
    exit
}

BENCHID=$1
[ -n "$BENCHID" ] || { usage; exit 111; }
if [[ $BENCHIDS != *$BENCHID* ]]; then
    echo "Benchmark case $BENCHID not available in $BENCHROOT."
    echo "Use the -l option to list available benchmark cases."
    exit
fi

BENCHDIR=$BENCHROOT/$BENCHID
BENCHSIMDIR=$BENCHDIR/simulations
BENCHFEAIDS=$(get_fea_ids)
RESDIR=$HOME/bumper/results
REQDIR=$HOME/bumper/requests

echo "Simulations for benchmark case $BENCHID:"
for BENCHFEAID in $BENCHFEAIDS; do
    echo "    $BENCHFEAID"
done

[ "$FEA" = "1" ] && {
    echo "Copying FEA results for benchmark case $BENCHID."
    for BENCHFEAID in $BENCHFEAIDS; do
	copy_fea_results $BENCHFEAID
    done

    [ -n "$NEWID" ] && {
	# This cannot be taken outside, even if it's exactly the same code as for CFD,
	# because the renaming has to happen before creating the done files.
	echo "Renaming $BENCHID to $NEWID in $RESDIR."
	rename_by_replace $RESDIR $BENCHID $NEWID
    }

    [ "$DONE" = "1" ] && {
	NEWFEAIDS=$BENCHFEAIDS
	[ -n "$NEWID" ] && NEWFEAIDS=${NEWFEAIDS//$BENCHID/$NEWID}
	for NEWFEAID in $NEWFEAIDS; do
	    echo "Creating .done file for $NEWFEAID."
	    $ECHO touch $REQDIR/$NEWFEAID.done
	done
    }
}

[ "$CFD" = "1" ] && {
    echo "Copying CFD results for benchmark case $BENCHID."
    BENCHCFDIDS=
    for BENCHFEAID in $BENCHFEAIDS; do
	BENCHCFDIDS="$BENCHCFDIDS ${BENCHFEAID}_cfd"
        copy_cfd_results $BENCHFEAID
    done

    [ -n "$NEWID" ] && {
	# This cannot be taken outside, even if it's exactly the same code as for FEA,
	# because the renaming has to happen before creating the done files.
	echo "Renaming $BENCHID to $NEWID in $RESDIR"
	rename_by_replace $RESDIR $BENCHID $NEWID
    }

    [ "$DONE" = "1" ] && {
	NEWCFDIDS=$BENCHCFDIDS
	[ -n "$NEWID" ] && NEWCFDIDS=${NEWCFDIDS//$BENCHID/$NEWID}
	for NEWCFDID in $NEWCFDIDS; do
	    echo "Creating .done files for $NEWCFDID."
	    $ECHO touch $REQDIR/$NEWCFDID.done
	done
    }    
}

# End
