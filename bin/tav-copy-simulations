#!/bin/bash
# Copy TAVIguide FEA or CFD simulation results.
# v1.0

# Functions


usage() {
    cat <<EOF

Usage: $(basename $0) [options] TASK SRCID TGTID

Copy the simulation result files necessary for finishing TASK of case TGTID
(which is an instance of source case SRCID) in TAVIguide-web. TASK can be one
of 'fea' or 'cfd'.

Options:

  -n : Dry run. Only show what would happen, but don't actually do anything.
  -l : List the available source cases.
  -k : Create .kill files for the copied simulations (with deliver=False).
       The presence of these files will kill any running simulations with the
       same names, without delivering their results (as this would overwrite
       the copied results).
  -d : Create .done files for the copied simulations. The presence of these
       files notifies TAVIguide-web that the simulations have finished.
  -t SRCTYPE : Specify the type of source case.
       The default source case type is 'BCH' (benchmark cases)
       Other options for the source case type are:
         - 'TAV' (production cases)
         - 'TST' (test cases)
       See section 'Source cases' for more info.
  -b BUMPDIR : Specify the path of the user's bumper directory.
       The default bumper directory path is:
         - '~/bumper'

Source cases:

  Source cases are located in subdirectories of 'feops1:/srv/webdav/TAV/
  Verification/SystemVerification/testdata', depending on the type:
    - 'BCH' for benchmark cases,
    - 'TAV' for production cases and
    - 'TST' for test cases.
  If you want to change source cases or make new ones available for testing
  purposes, this is where you do it.

Examples:

  1. Listing all production source cases:

       $ $(basename $0) -lt TAV

  2. Copying the CFD results of case TST000321 (which is an instance of
     production source case TAV000123) to the user's bumper/results
     directory and creating .done files in the user's bumper/requests
     directory (DRY RUN):

       $ $(basename $0) -ndt TAV cfd TAV000123 TST000321
  
  3. Typical copying of benchmark case simulation results during TAVIguide
     testing will be done with the following task-specific commands:

       FEA : $ $(basename $0) -kd fea BECHID TESTID
       CFD : $ $(basename $0) -kd cfd BECHID TESTID

EOF
}


element_not_in() {
    # Test if element $1 is not in array ${@:2}.
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
    return 0
}


rename_by_replace() {
    # All files in directory $1 (and subdirectories) that have $2 in them are
    # renamed by replacing $2 with $3.
    find $1 -depth -name "$2[.-]*" -exec rename $DRY "s|$2([^/]*)$|$3\$1|" {} \;
}


# Process the arguments.
DRY=
ECHO=
LIST=0
KILL=0
DONE=0
SRCTYPE=BCH
BUMPDIR=$HOME/bumper

OPTIND=1 # Reset in case getopts has been used previously in the shell.

while getopts "dklnt:b:" opt; do
    case "$opt" in
	n)  DRY=-n
	    ECHO="(DRY RUN) "
	    ;;
	l)  LIST=1
	    ;;
	k)  KILL=1
	    ;;
	d)  DONE=1
	    ;;
	t)  SRCTYPE=$OPTARG
	    ;;
	b)  BUMPDIR=$OPTARG
	    ;;
    esac
done

shift $((OPTIND-1))

# Set a few variables.
SRCCASESDIR=/srv/webdav/TAV/Verification/SystemVerification/testdata/$SRCTYPE
SRCIDS=$(ls $SRCCASESDIR)
[ "$LIST" = "1" ] && {
    # If the -l option is used, only list available source cases.
    echo "The following source cases are available in '$SRCCASESDIR':"
    for ID in $SRCIDS; do
	echo "   $ID"
    done
    exit
}

VALIDTASKS=("fea" "cfd")
TASK=$1
[ -n "$TASK" ] || { usage; exit 111; }
if element_not_in "$TASK" "${VALIDTASKS[@]}"; then
    echo "Task code '$TASK' is invalid. The following task codes are valid:"
    echo "   ${VALIDTASKS[@]}"
    exit
fi

SRCIDS=($SRCIDS)
SRCID=$2
[ -n "$SRCID" ] || { usage; exit 111; }
if element_not_in "$SRCID" "${SRCIDS[@]}"; then
    echo "Source case '$SRCID' not available in '$SRCCASESDIR'."
    echo "Use the -l option to list available source cases."
    exit
fi

TGTID=$3
[ -n "$TGTID" ] || { usage; exit 111; }

SRCCASEDIR=$SRCCASESDIR/$SRCID
SRCSIMDIR=$SRCCASEDIR/simulations
SRCSIMS=$(ls $SRCSIMDIR)
echo "Simulations for source case '$SRCID':"
for SRCSIM in $SRCSIMS; do
    echo "   $SRCSIM"
done

RESDIR=$BUMPDIR/results
REQDIR=$BUMPDIR/requests

# Copy files depending on selected task.
[ "$TASK" = "fea" ] && {
    echo "Copy source case's FEA simulation results."
    TGTSIMS=
    for SRCSIM in $SRCSIMS; do
	TGTSIM="${SRCSIM//$SRCID/$TGTID}"
	TGTSIMS="$TGTSIMS $TGTSIM"
	if [ -d $RESDIR/$TGTSIM ]; then
	    echo "Simulation results for '$TGTSIM' are already in '$RESDIR'!"
	    echo "Aborting."
	    exit
	fi
	rsync -avhP $SRCSIMDIR/$SRCSIM/* --include "$SRCSIM.*" --exclude "*"  $RESDIR/$TGTSIM $DRY
    done
}

[ "$TASK" = "cfd" ] && {
    echo "Copy source case's CFD simulation results."
    TGTSIMS=
    for SRCSIM in $SRCSIMS; do
	TGTSIM="${SRCSIM//$SRCID/$TGTID}_cfd"
	TGTSIMS="$TGTSIMS $TGTSIM"
	if [ -d $RESDIR/$TGTSIM ]; then
	    echo "Simulation results for '$TGTSIM' are already in '$RESDIR'!"
	    echo "Aborting."
	    exit
	fi
	rsync -avhP $SRCSIMDIR/$SRCSIM/cfd/results/* --include "PBBOX.pgf" --include "*.log" --exclude "*"  $RESDIR/$TGTSIM $DRY
	for alignment in aligned misaligned; do
	    rsync -avhP $SRCSIMDIR/$SRCSIM/cfd/results/* --include "${SRCSIM}_$alignment*" --include "${SRCSIM}_${alignment}_logs/*" --exclude "*" $RESDIR/$TGTSIM/${TGTSIM}_$alignment $DRY
	done
    done
}

# Rename files in bumper results directory.
echo "Rename '$SRCID' to '$TGTID' for files in '$RESDIR'."
rename_by_replace $RESDIR $SRCID $TGTID

# Create kill files for copied simulations (if requested).
[ "$KILL" = "1" ] && {
    for TGTSIM in $TGTSIMS; do
	echo "$ECHO""Creating .kill file for simulation '$TGTSIM'."
	[ "$DRY" = "" ] && {
	    echo "deliver=False" > $REQDIR/$TGTSIM.kill
	}
    done
}

# Create done files for copied simulations (if requested).
[ "$DONE" = "1" ] && {
    for TGTSIM in $TGTSIMS; do
	echo "$ECHO""Creating .done file for simulation '$TGTSIM'."
	[ "$DRY" = "" ] && {
	    touch $REQDIR/$TGTSIM.done
	}
    done
}

# End
